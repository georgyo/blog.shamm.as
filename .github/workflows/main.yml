# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Hugo Actions
      uses: srt32/hugo-action@v0.0.3

    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: public
        path: public

  push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: public
          path: /tmp/public
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          chmod 0700 ~/.ssh
          cat - << EOF > ~/.ssh/deploy-key
          ${{ secrets.DEV_KEY }}
          EOF
          chmod 0600 ~/.ssh/deploy-key
          cat - << 'EOF' > ~/.ssh/config
          ${{ secrets.SSH_CONFIG }}
          EOF
      - name: Deploy
        run: |
          ls
          rsync -avHAXSx --delete-after /tmp/public/ shamm.as:/home/gitlab-deployer/dev/
          
  bucket_push:
    runs-on: ubuntu-latest
    needs: build
    name: push textile bucket
    steps:
      - name: Download build artifacts
        id: fetch
        uses: actions/download-artifact@v2
        with:
          name: public
          path: .
      - name: push action
        id: bucket
        uses: textileio/github-action-buckets@master
        with:
          key: ${{ secrets.TEXTILE_ACCOUNT_KEY }}
          secret: ${{ secrets.TEXTILE_ACCOUNT_SECRET }}
          bucket: blog
          thread: ${{ secrets.TEXTILE_THREAD_ID }}
      - run: "echo ipfs: ${{ steps.bucket.outputs.ipfs }}"
      - name: Update DNSLink
        env:
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
          RECORD_DOMAIN: shamm.net
          RECORD_NAME: _dnslink.blog.shamm.as
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_TOKEN_ZONE_ID }}
        id: dnslink
        uses: textileio/cloudflare-update-dnslink@master
        with:
          cid: ${{ steps.bucket.outputs.ipfs }}
